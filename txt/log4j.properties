################################################################################
# Remarks:
# - cascaded variable substitution don't work!
################################################################################


################################################################################
# Categories
# ------------------------------------------------------------------------------
# Category "rootCategory"
# Log all categories with priority ERROR (no DEBUG) to appender "stdout" and
# "file" (see below), except categories which overwrite this global
# configuration with their own.
#
#
# log all loggings >= INFO level to the logfile. (The default)
log4j.rootCategory=INFO, file, stdout
#
# don't care about warnings. (For debug resasons only)
#log4j.rootCategory=ERROR, file, stdout

# ------------------------------------------------------------------------------
# Other categories (overwrites configuration of higher categories, also root!)
# Example: Category "de.mypackage.MyClass"
#          Log class "de.mypackage.MyClass" more detailed (priority DEBUG)
#          log4j.category.de.mypackage.MyClass=DEBUG
####################

log4j.category.de.filiadata.lucene=DEBUG
log4j.category.de.filiadata.lucene.spider.document.FixedPdfTextStripper=INFO

################################################################################


################################################################################
# Layouts
# ------------------------------------------------------------------------------
# Layout "layout.CallerInformation"
# This layout offers additionally informations about the caller, e.g. number of
# line in sourcecode, method, class etc. Use this layout at debug-time (only).
# WARNING Generating the caller class information is slow. Thus, it's use should
# be avoided unless execution speed is not an issue.
#layout.CallerInformation=%d{dd/MM/yyyy HH:mm:ss} [%t]{%-5p} (%F:%L) - %m%n
layout.CallerInformation=%d{dd/MM/yyyy HH:mm:ss} [%-5p](%F:%L) %m%n
# ------------------------------------------------------------------------------
# Layout "layout.PDLogLike"
# This layout looks like the log-line-format of PDLog.cpp, only difference is
# that there is no line numbering in the log-file.
layout.PDLogLike=%d{dd/MM/yyyy HH:mm:ss} [%t]{%-5p} %c{2} - %m%n
# ------------------------------------------------------------------------------
# Layout "layout.Used"
# This is the layout currently used.
# Replace the value of this key by the layout you want to use for logging.
# You can copy the value from the upper layouts!
layout.Used=%d{dd/MM/yyyy HH:mm:ss} [%-5p] %l %n  %m%n
################################################################################


################################################################################
# Appenders
# ------------------------------------------------------------------------------
# Appender "stdout"
# stdout is set to be a ConsoleAppender.
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
; log4j.appender.stdout.layout.ConversionPattern=${layout.Used}
# ------------------------------------------------------------------------------
# Appender "file"
# file is set to be a FileAppender.

# Use org.apache.log4j.FileAppender or org.apache.log4j.RollingFileAppender
log4j.appender.file=org.apache.log4j.RollingFileAppender

# Path of the log-file
log4j.appender.file.File=log/spider.log

# Maximum size of the log-file (only org.apache.log4j.RollingFileAppender)
log4j.appender.file.MaxFileSize=500KB

# Amount of backup files (only org.apache.log4j.RollingFileAppender)
log4j.appender.file.MaxBackupIndex=1

# Uses PatternLayout
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=${layout.Used}
################################################################################

